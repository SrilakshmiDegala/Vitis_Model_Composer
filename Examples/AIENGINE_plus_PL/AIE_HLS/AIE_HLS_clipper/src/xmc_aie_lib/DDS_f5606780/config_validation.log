
****** Xilinx Vitis Development Environment
****** Vitis v2022.1 (64-bit)
  **** SW Build 3471264 on 2022-02-22-17:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.

{
    "Design-Name": "DDS_f5606780",
    "OutputDir": "./xmc_aie_lib",
    "Design-Type": "DDS_MIXER",
    "Design-Spec": {
        "DataType": "cint16",
        "WindowSize": 32,
        "MixerMode": 0,
        "InterfaceType": "window",
        "SSR": 1,
        "PhaseIncr": 0,
        "InitialPhaseOffset": 0,
        "SamplingRate": 200
    }
}
Validating specification

Processing IP metadata
Parsing metadata file: /proj/xbuilds/SWIP/2022.1_0222_2130/installs/lin64/Vitis/2022.1/data/ipmetadata/meta_data_dds_mixer.json
{
    "schema": "aieip_spec_schema-0.1",
    "constraints": {
        "windowSizeMultipleOfLanes": {
            "description": "WindowSize should be a multiple of the number of lanes used within the kernel (8)."
        }
    },
    "ip_name": "dds_mixer",
    "parameters": {
        "TT_DATA": {
            "description": "The type of input data samples.",
            "enum": [
                "cint16",
                "cint32",
                "cfloat"
            ],
            "type": "name"
        },
        "TP_INPUT_WINDOW_VSIZE": {
            "description": "The number of samples in the input window.",
            "minimum": 8,
            "maximum": 4096,
            "type": "int"
        },
        "TP_MIXER_MODE": {
            "description": "The dds/mixer operation modes.",
            "minimum": 0,
            "maximum": 2,
            "type": "int"
        },
        "TP_API": {
            "description": "Input/output interface should be window-based or stream-based.",
            "minimum": 0,
            "maximum": 1,
            "type": "int"
        },
        "TP_SSR": {
            "description": "Parrallelise DDS/Mixer by exposing a TP_SSR length port array for each port.",
            "minimum": 1,
            "type": "int"
        },
        "phaseInc": {
            "description": "The phase increment between samples.",
            "minimum": 0,
            "maximum": 2147483648,
            "type": "uint"
        },
        "initialPhaseOffset": {
            "description": "The value that initialises the phase accumulator, creating a phase offset.",
            "minimum": 0,
            "maximum": 2147483648,
            "type": "uint"
        }
    },
    "cost_metrics": {
        "number_of_aie_cores": {
            "description": "Number of AIE cores needed."
        }
    },
    "performance_metrics": {
        "peak_samples_per_clock": {
            "description": "Number of input samples processed per AIE clock cycle (Peak)."
        }
    }
}

Processing qor database

Invoking partitioner
avg-cycle-count: 66
utilization-ratio: 0.4125
Validating IP-configuration :
{
    "spec": "meta_data_dds_mixer.json",
    "parameters": {
        "TT_DATA": "cint16",
        "TP_INPUT_WINDOW_VSIZE": 32,
        "TP_MIXER_MODE": 0,
        "TP_API": 0,
        "TP_SSR": 1,
        "phaseInc": 0,
        "initialPhaseOffset": 0
    }
}
Validation successful

Generating dds/mixer graph
