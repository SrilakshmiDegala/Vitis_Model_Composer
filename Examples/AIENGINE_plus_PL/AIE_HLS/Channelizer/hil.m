classdef hil < matlab.System
    % Custom MATLAB System object
    
    properties (Access = private)
        % Define any private properties here
        
    end

    properties(Nontunable)
        N=2*1024; % 
        hw_server_URL; % hw_server URL
        BOOT_BIN_dir; % Code directory generated by VMC
    end

    
    methods (Access = protected)
        function setupImpl(obj)
            % Perform one-time initialization tasks here
            % This method is called before any processing is done

            assert(exist(obj.BOOT_BIN_dir,"dir"), "Code directory provided does not exist.")

            st = vmcjtagcosim('start',{obj.BOOT_BIN_dir, obj.hw_server_URL});
            assert(st{1} == 1, "Something went wrong connecting to the board")
            
        end
        
        function [out1, out2, out3, out4, out5, out6, out7, out8] = stepImpl(obj, in1, in2, in3, in4, in5, in6, in7)
            % Implement algorithm or processing here
            % This method is called for each time step or invocation of the object
            
            % Dummy example: Just pass through the inputs as outputs

            st = vmcjtagcosim('run', {in1,in2,in3,in4,in5,in6,in7});
            out1 = st{2}{1}.';
            out2 = st{2}{2}.';
            out3 = st{2}{3}.';
            out4 = st{2}{4}.';
            out5 = st{2}{5}.';
            out6 = st{2}{6}.';
            out7 = st{2}{7}.';
            out8 = st{2}{8}.';
        end
        
        function resetImpl(obj)
            % Reset any internal state here
            % This method is called when the object is reset
        end
        
        function validateInputsImpl(obj, in1, in2, in3, in4, in5, in6, in7)
            % Validate inputs to the step method at initialization
            % This method is called once before the first call to stepImpl
            
            % Example: Check input dimensions or types
            if ~isnumeric(in1) || ~isnumeric(in2) || ~isnumeric(in3) || ~isnumeric(in4) || ~isnumeric(in5) || ~isnumeric(in6) || ~isnumeric(in7)
                error('Inputs must be numeric');
            end
        end

        function icon = getIconImpl(~)
            % Define icon for System block
            icon = matlab.system.display.Icon("vck190.png");
        end
        
        function [out1, out2, out3, out4, out5, out6, out7, out8] = getOutputSizeImpl(obj)
            % Return size for each output port
            % Example: [out1, out2, out3, out4, out5] = [100, 1];
            % Modify this based on your output size requirements
            out1 = 4*obj.N;
            out2 = 4*obj.N;
            out3 = 4*obj.N;
            out4 = 4*obj.N;
            out5 = 4*obj.N;
            out6 = 4*obj.N;
            out7 = 4*obj.N;
            out8 = 4*obj.N;            
        end
        
        function [out1, out2, out3, out4, out5, out6, out7, out8 ] = isOutputFixedSizeImpl(obj)
            % Return true or false for each output port
            % Modify this based on your requirements
            out1 = false;
            out2 = false;
            out3 = false;
            out4 = false;
            out5 = false;
            out6 = false;
            out7 = false;
            out8 = false;
        end

        function [out1, out2, out3, out4, out5, out6, out7, out8] = getOutputDataTypeImpl(obj)
            % Return data type for each output port
            % Modify this based on your data type requirements
            out1 = 'int16';
            out2 = 'int16';
            out3 = 'int16';
            out4 = 'int16';
            out5 = 'int16';
            out6 = 'int16';
            out7 = 'int16';
            out8 = 'int16';
        end
        
        function [out1, out2, out3, out4, out5, out6, out7, out8] = isOutputComplexImpl(obj)
            % Return true or false for each output port
            % Modify this based on your requirements
            out1 = true;
            out2 = true;
            out3 = true;
            out4 = true;
            out5 = true;
            out6 = true;
            out7 = true;
            out8 = true;
        end
    end
end
